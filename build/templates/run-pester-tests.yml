parameters:
  projectName: ''

steps:
  - bash: |
      if [ -z "$PROJECT_NAME" ]; then
        echo "##vso[task.logissue type=error;]Missing template parameter \"projectName\""
        echo "##vso[task.complete result=Failed;]"
      fi
    env:
      PROJECT_NAME: ${{ parameters.projectName }}
  - task: PowerShell@2
    displayName: 'Run Pester tests'
    inputs:
      targetType: 'inline'
      pwsh: true
      failOnStderr: true
      script: |
        Install-Module -Name Pester -Force -SkipPublisherCheck
        Install-Module -Name Az -Force -SkipPublisherCheck
        
        Get-ChildItem -Path ./src -Filter *.psm1 -Recurse |
            % { Import-Module -Name $_.DirectoryName -ErrorAction Stop }
        
        Invoke-Pester -Script "./src/${{ parameters.projectName }}/" -OutputFile "./pester.test.results.xml" -OutputFormat 'NUnitXML'
  - task: PublishTestResults@2
    displayName: 'Publish test results'
    inputs:
      testResultsFormat: 'NUnit'
      testResultsFiles: '**/pester.test.results*.xml'
      failTaskOnFailedTests: true
