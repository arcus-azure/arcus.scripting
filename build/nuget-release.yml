name: $(Package.Version)

trigger: none
pr: none

parameters:
  - name: 'Package.Version'
    type: 'string'

resources:
  repositories:
    - repository: templates
      type: github
      name: arcus-azure/azure-devops-templates
      endpoint: arcus-azure

variables:
  - group: 'Build Configuration'
  - template: ./variables/build.yml
  - name: 'Repository'
    value: 'arcus-azure/arcus.template'
  - name: 'Package.Version'
    value: ${{ parameters['Package.Version'] }}

stages:
  - stage: Build
    jobs:
      - job: Compile
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
           - task: qetza.replacetokens.replacetokens-task.replacetokens@3
            displayName: 'Replace package version tokens'
            inputs:
              rootDirectory: 'src/'
              targetFiles: '**/*.psd1'
              encoding: 'auto'
              verbosity: 'detailed'
              writeBOM: true
              actionOnMissing: 'fail'
              keepToken: false
              tokenPrefix: '#{'
              tokenSuffix: '}#'
          - task: CopyFiles@2
            displayName: 'Copy build artifacts'
            inputs:
              contents: |
                **/*.psm1
                **/*.psd1
              targetFolder: '$(Pipeline.Workspace)/build'
          - task: PublishPipelineArtifact@0
            displayName: 'Publish build artifacts'
            inputs:
              targetPath: '$(Pipeline.Workspace)/build'
              artifactName: Build

  - stage: UnitTests
    displayName: Unit Tests
    dependsOn: Build
    condition: succeeded()
    jobs:
      - job: UnitTests
        displayName: 'Run unit tests'
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
          - task: DownloadPipelineArtifact@2
            displayName: 'Download build artifacts'
            inputs:
              artifact: 'Build'
              path: '$(Build.SourcesDirectory)'
          - template: 'templates/run-pester-tests.yml'
            parameters:
              projectName: '$(Project).Tests.Unit'

  - stage: Release
    displayName: 'Release to NuGet.org'
    dependsOn: UnitTests
    condition: succeeded()
    jobs:
      - job: PushToNuGet
        displayName: 'Push to NuGet.org'
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
          - task: DownloadPipelineArtifact@2
            displayName: 'Download build artifacts'
            inputs:
              artifact: 'Build'
              path: '$(Build.SourcesDirectory)'
          - template: github/create-release.yml@templates
            parameters:
              repositoryName: '$(Repository)'
              releaseNotes: |
                Install new version via [NuGet](https://www.nuget.org/packages/$(Project)/$(Build.BuildNumber))
                ```shell
                PM > Install-Package $(Project) --Version $(Build.BuildNumber)
                ```
          - template: nuget/publish-official-package.yml@templates
